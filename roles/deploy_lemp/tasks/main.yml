---
- name: Create and start lemp stack (nginx, mysql, wordpress)
  community.docker.docker_compose:
    docker_host: "{{ docker_host }}"
    ca_cert: "{{ ca_cert }}"
    client_cert: "{{ client_cert }}"
    client_key: "{{ client_key }}"
    project_name: "otraw"
    project_src: "{{ project_src }}"
    build: true
    tls: true
    validate_certs: true
    state: present
  delegate_to: localhost

- name: Request staging letsencrypt certificates
  community.docker.docker_container:
    docker_host: "{{ docker_host }}"
    ca_cert: "{{ ca_cert }}"
    client_cert: "{{ client_cert }}"
    client_key: "{{ client_key }}"
    tls: true
    validate_certs: true
    name: certbot-staging
    image: certbot/certbot:v2.4.0
    command: "certonly --webroot --webroot-path=/var/www/html --email {{ certbot_email }} --agree-tos --no-eff-email --staging -d {{ domain }} -d www.{{ domain }}"
    volumes:
      - otraw_certbot-etc:/etc/letsencrypt
      - otraw_wordpress:/var/www/html
    networks:
      - name: otraw_app-network
  delegate_to: localhost

- name: Waiting for staging certifcates to be applied
  ansible.builtin.pause:
    seconds: 20

- name: Enable HTTPS and SSL on nginx webserver
  community.docker.docker_container_exec:
    docker_host: "{{ docker_host }}"
    ca_cert: "{{ ca_cert }}"
    client_cert: "{{ client_cert }}"
    client_key: "{{ client_key }}"
    tls: true
    validate_certs: true
    container: webserver
    # detach: true
    command: /bin/sh -c "/app/scripts/enable_ssl_and_https.sh"
  delegate_to: localhost

# - name: Wait for nginx to reload
#   ansible.builtin.pause:
#     seconds: 10

# - name: Request prod letsencrypt certificates #Comment this out when not required to avoid hitting rate limits
#   community.docker.docker_container:
#     docker_host: "{{ docker_host }}"
#     ca_cert: "{{ ca_cert }}"
#     client_cert: "{{ client_cert }}"
#     client_key: "{{ client_key }}"
#     tls: true
#     validate_certs: true
#     name: certbot-prod
#     image: certbot/certbot:v2.4.0
#     command: "certonly --webroot --webroot-path=/var/www/html --email {{ certbot_email }} --agree-tos --no-eff-email --force-renewal -d {{ domain }} -d www.{{ domain }}"
#     volumes:
#       - otraw_certbot-etc:/etc/letsencrypt
#       - otraw_wordpress:/var/www/html
#     networks:
#       - name: otraw_app-network
#   delegate_to: localhost

# - name: Waiting for prod certifcates to be applied
#   ansible.builtin.pause:
#     seconds: 20

# - name: Recreate nginx webserver to apply new config
#   community.docker.docker_compose:
#     docker_host: "{{ docker_host }}"
#     ca_cert: "{{ ca_cert }}"
#     client_cert: "{{ client_cert }}"
#     client_key: "{{ client_key }}"
#     tls: true
#     validate_certs: true
#     project_src: "{{ project_src }}"
#     recreate: always
#     dependencies: false
#     services:
#       - webserver
#     state: present
#   delegate_to: localhost
